from textual.app import App, ComposeResult
from textual.containers import Horizontal, Vertical
from textual.widgets import Static, Input
from textual import events


class ThreePanelApp(App):
    """–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""

    CSS = """
    Screen {
        layout: vertical;
    }

    #header {
        height: 1;
        background: green;
        color: white;
        text-align: center;
        margin-bottom: 1;
    }

    #main {
        layout: horizontal;
        height: 1fr;
    }

    .panel {
        width: 1fr;
        border: solid white;
        padding: 1;
    }

    .panel-active {
        width: 1fr;
        border: solid green;
        background: darkgreen;
        padding: 1;
    }

    #input-container {
        height: 3;
        margin-top: 1;
    }

    Input {
        margin: 1;
    }
    """

    def __init__(self):
        super().__init__()
        self.input_history = []
        self.active_panel = 0  # 0, 1, 2 –¥–ª—è –ø–∞–Ω–µ–ª–µ–π 1, 2, 3
        self.panel_contents = [
            "–ü–ê–ù–ï–õ–¨ 1 (–ê–ö–¢–ò–í–ù–ê)\n\n–û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞...\n\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n‚Ä¢ Ctrl+‚Üí —Å–ª–µ–¥—É—é—â–∞—è –ø–∞–Ω–µ–ª—å\n‚Ä¢ Ctrl+‚Üê –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–∞–Ω–µ–ª—å",
            "–ü–ê–ù–ï–õ–¨ 2\n\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏ 2",
            "–ü–ê–ù–ï–õ–¨ 3\n\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏ 3"
        ]

    def compose(self) -> ComposeResult:
        """–°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        yield Static("–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ - Ctrl+—Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏", id="header")

        with Horizontal(id="main"):
            yield Static(self.panel_contents[0], classes="panel-active", id="panel1")
            yield Static(self.panel_contents[1], classes="panel", id="panel2")
            yield Static(self.panel_contents[2], classes="panel", id="panel3")

        yield Input(placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç - –æ–Ω –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏...", id="command-input")

    def on_key(self, event: events.Key) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à"""
        if event.key == "ctrl+right":
            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–∞–Ω–µ–ª–∏
            if self.active_panel < 2:
                self.active_panel += 1
                self.update_active_panel()
                event.prevent_default()
        elif event.key == "ctrl+left":
            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–∞–Ω–µ–ª–∏
            if self.active_panel > 0:
                self.active_panel -= 1
                self.update_active_panel()
                event.prevent_default()

    def update_active_panel(self):
        """–û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
        for i in range(3):
            panel = self.query_one(f"#panel{i + 1}", Static)
            if i == self.active_panel:
                panel.remove_class("panel")
                panel.add_class("panel-active")
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                active_content = f"–ü–ê–ù–ï–õ–¨ {i + 1} (–ê–ö–¢–ò–í–ù–ê)\n\n{self.get_panel_content(i)}"
                panel.update(active_content)
            else:
                panel.remove_class("panel-active")
                panel.add_class("panel")
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                inactive_content = f"–ü–ê–ù–ï–õ–¨ {i + 1}\n\n{self.get_panel_content(i)}"
                panel.update(inactive_content)

    def get_panel_content(self, panel_index):
        """–ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        content = self.panel_contents[panel_index]
        # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –ø–∞–Ω–µ–ª–∏
        lines = content.split('\n')
        if lines and lines[0].startswith("–ü–ê–ù–ï–õ–¨"):
            return '\n'.join(lines[2:])  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        return content

    def on_input_submitted(self, event: Input.Submitted) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã"""
        user_input = event.value.strip()

        if not user_input:
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        self.input_history.append(user_input)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        if user_input.lower() == "exit":
            self.exit()
            return
        elif user_input.lower() == "clear":
            self.clear_active_panel()
        elif user_input.lower() == "help":
            self.show_help()
        elif user_input.lower() == "reset":
            self.reset_all_panels()
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
            self.add_text_to_active_panel(user_input)

        # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        event.input.value = ""

    def add_text_to_active_panel(self, text):
        """–î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
        current_content = self.get_panel_content(self.active_panel)

        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ
        if "–û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞" in current_content or "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏" in current_content:
            new_content = f"‚ñ∫ {text}"
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
            new_content = f"{current_content}\n‚ñ∫ {text}"

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏
        self.panel_contents[self.active_panel] = f"–ü–ê–ù–ï–õ–¨ {self.active_panel + 1}\n\n{new_content}"

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        self.update_active_panel()

    def clear_active_panel(self):
        """–û—á–∏—â–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å"""
        self.panel_contents[self.active_panel] = f"–ü–ê–ù–ï–õ–¨ {self.active_panel + 1}\n\n–ü–∞–Ω–µ–ª—å –æ—á–∏—â–µ–Ω–∞"
        self.update_active_panel()

    def reset_all_panels(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ø–∞–Ω–µ–ª–∏ –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é"""
        self.panel_contents = [
            "–ü–ê–ù–ï–õ–¨ 1\n\n–û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞...\n\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n‚Ä¢ Ctrl+‚Üí —Å–ª–µ–¥—É—é—â–∞—è –ø–∞–Ω–µ–ª—å\n‚Ä¢ Ctrl+‚Üê –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–∞–Ω–µ–ª—å",
            "–ü–ê–ù–ï–õ–¨ 2\n\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏ 2",
            "–ü–ê–ù–ï–õ–¨ 3\n\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–Ω–µ–ª–∏ 3"
        ]
        self.input_history = []
        self.update_active_panel()

    def show_help(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
        help_text = """–°–ü–†–ê–í–ö–ê:

–ù–ê–í–ò–ì–ê–¶–ò–Ø:
‚Ä¢ Ctrl+‚Üí - —Å–ª–µ–¥—É—é—â–∞—è –ø–∞–Ω–µ–ª—å
‚Ä¢ Ctrl+‚Üê - –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–∞–Ω–µ–ª—å

–ö–û–ú–ê–ù–î–´:
‚Ä¢ clear - –æ—á–∏—Å—Ç–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å
‚Ä¢ reset - —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –ø–∞–Ω–µ–ª–∏
‚Ä¢ help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ exit - –≤—ã—Ö–æ–¥

–í–í–û–î:
–õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è 
–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""

        self.panel_contents[self.active_panel] = f"–ü–ê–ù–ï–õ–¨ {self.active_panel + 1}\n\n{help_text}"
        self.update_active_panel()

    def on_mount(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        # –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        input_widget = self.query_one("#command-input", Input)
        input_widget.focus()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é –ø–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω–æ–π
        self.update_active_panel()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏")
    print("=" * 60)
    print("–£–ü–†–ê–í–õ–ï–ù–ò–ï:")
    print("‚Ä¢ Ctrl+‚Üí (—Å—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ) - —Å–ª–µ–¥—É—é—â–∞—è –ø–∞–Ω–µ–ª—å")
    print("‚Ä¢ Ctrl+‚Üê (—Å—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ) - –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–∞–Ω–µ–ª—å")
    print()
    print("–ö–û–ú–ê–ù–î–´:")
    print("‚Ä¢ clear - –æ—á–∏—Å—Ç–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å")
    print("‚Ä¢ reset - —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –ø–∞–Ω–µ–ª–∏")
    print("‚Ä¢ help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
    print("‚Ä¢ exit - –≤—ã—Ö–æ–¥")
    print()
    print("–í–í–û–î:")
    print("‚Ä¢ –õ—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏")
    print("‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –≤—ã–¥–µ–ª–µ–Ω–∞ –∑–µ–ª—ë–Ω—ã–º —Ü–≤–µ—Ç–æ–º")
    print("=" * 60)

    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞...")

    app = ThreePanelApp()
    app.run()


if __name__ == "__main__":
    main()